CREATE TABLE LOANPR (
MTYPE VARCHAR2(7) NOT NULL PRIMARY KEY,
MAXLOAN NUMBER(2)NOT NULL);
 
INSERT INTO LOANPR VALUES ('STUDENT',5);
INSERT INTO LOANPR VALUES ('STAFF',10);

CREATE TABLE MEM (
MID NUMBER(7) PRIMARY KEY,
MTYPE VARCHAR2(7) REFERENCES LOANPR(MTYPE),
LNAME VARCHAR2(40),
FNAME VARCHAR2(40),
EMAIL VARCHAR2(40));
 
INSERT INTO MEM VALUES (2201593, 'STUDENT', 'HA', 'ALICE', 'J.HA@SE22.QMUL.AC.UK');
INSERT INTO MEM VALUES (2201472, 'STUDENT', 'FITZGERALD', 'ELLEN GRACE', 'E.G.FITZGERALD@SE22.QMUL.AC.UK');
INSERT INTO MEM VALUES (2201539, 'STUDENT', 'WANG', 'RUOCHEN', 'R.WANG@SE22.QMUL.AC.UK');
INSERT INTO MEM VALUES (1103247, 'STAFF', 'SKELTON-GARCIA', 'ANA ISABEL', 'A.SKELTON-GARCIA@SE22.QMUL.AC.UK');

CREATE TABLE RNAME (
ISBN NUMBER(13) PRIMARY KEY,
TITLE VARCHAR2(50) NOT NULL,
ADP VARCHAR2(30),
PUBDATE DATE,
LPERIOD NUMBER(3) NOT NULL,
TYPE VARCHAR2(30));

INSERT INTO RNAME VALUES(9780367571931, 'A Practical Guide to Database Design',  'Rex Hogan',  TO_DATE('30-JUN-2020', 'DD-MON-YYYY'),  14, 'Book');
INSERT INTO RNAME VALUES(9781107186125, 'Principles of Database Management',  'Wilfried Lemahieu',  TO_DATE('30-JUN-2018', 'DD-MON-YYYY'),  14,  'Book');
INSERT INTO RNAME VALUES(9780465023967, 'The History of the Ottoman Empire',  'Caroline Finkel',  TO_DATE('01-JAN-2005', 'DD-MON-YYYY'),  2, 'Book');
INSERT INTO RNAME VALUES(3691564378829, 'Advance Medical Directives',  NULL,  TO_DATE('14-JUL-1995', 'DD-MON-YYYY'),  0, 'Book');
INSERT INTO RNAME VALUES(1231444165232, 'German Intermediate', NULL,  NULL,  2,'CD');

CREATE TABLE RCOPY (
	ISBN NUMBER(13) NOT NULL , 
	COPY NUMBER(2) NOT NULL,
	FLR NUMBER(1) NOT NULL,
	SHF DECIMAL(4,2) NOT NULL);

ALTER TABLE RCOPY ADD CONSTRAINT to_pk PRIMARY KEY(ISBN,COPY);

INSERT INTO RCOPY VALUES(9780367571931, 1, 1, 15.3);
INSERT INTO RCOPY VALUES(9780367571931, 2, 1, 15.4);
INSERT INTO RCOPY VALUES(9780367571931, 3, 1, 15.5);
INSERT INTO RCOPY VALUES(9781107186125, 1, 1, 16.1);
INSERT INTO RCOPY VALUES(9780465023967, 1, 3, 2.2);
INSERT INTO RCOPY VALUES(3691564378829, 1, 4, 3.5);
INSERT INTO RCOPY VALUES(1231444165232, 3, 3, 12.3);

CREATE TABLE RES (
RESNO NUMBER(4) PRIMARY KEY,
MID NUMBER(7) REFERENCES MEM(MID),
ISBN NUMBER(13),
COPY NUMBER(2),
RESDATE TIMESTAMP);

INSERT INTO RES VALUES(101, 2201472, 9780367571931, 2, TO_TIMESTAMP('27-NOV-2022 08:10:00', 'DD-MON-YYYY HH24:MI:SS'));
INSERT INTO RES VALUES(102, 2201539, 9780367571931, 2, TO_TIMESTAMP('30-NOV-2022 10:10:00', 'DD-MON-YYYY HH24:MI:SS'));
INSERT INTO RES VALUES(103, 2201593, 1231444165232, 3, TO_TIMESTAMP('04-DEC-2022 15:10:00', 'DD-MON-YYYY HH24:MI:SS'));

CREATE TABLE LOANCURRENT(
LOANNO NUMBER(4) PRIMARY KEY,
MID NUMBER(7) REFERENCES MEM(MID),
ISBN NUMBER(13),
COPY NUMBER(2),
LOANDATE TIMESTAMP,
RETURNDATE TIMESTAMP,
FINEDATE TIMESTAMP
);

INSERT INTO LOANCURRENT VALUES(211, 2201593, 9780367571931, 2, TO_TIMESTAMP('25-NOV-2022 13:00:00', 'DD-MON-YYYY HH24:MI:SS'), NULL,NULL);
INSERT INTO LOANCURRENT VALUES(212, 2201472, 9780367571931, 1, TO_TIMESTAMP('01-NOV-2022 13:00:00', 'DD-MON-YYYY HH24:MI:SS'), NULL,NULL);
INSERT INTO LOANCURRENT VALUES(213, 2201472, 9780465023967, 1, TO_TIMESTAMP('01-NOV-2022 13:00:00', 'DD-MON-YYYY HH24:MI:SS'), NULL,NULL);
INSERT INTO LOANCURRENT VALUES(214, 2201593, 1231444165232, 3, TO_TIMESTAMP('30-NOV-2022 13:00:00', 'DD-MON-YYYY HH24:MI:SS'), NULL,NULL);
INSERT INTO LOANCURRENT VALUES(215, 1103247, 9780367571931, 3, TO_TIMESTAMP('01-DEC-2022 14:00:00', 'DD-MON-YYYY HH24:MI:SS'), NULL,NULL);

CREATE TABLE LOANARCHIVE(
LOANNO NUMBER(4) PRIMARY KEY,
MID NUMBER(7) REFERENCES MEM(MID),
ISBN NUMBER(13),
COPY NUMBER(2),
LOANDATE TIMESTAMP,
RETURNDATE TIMESTAMP,
FINEDATE TIMESTAMP);

INSERT INTO LOANARCHIVE VALUES(203, 2201593, 9780367571931, 2, TO_TIMESTAMP('12-SEP-2022 13:00:00', 'DD-MON-YYYY HH24:MI:SS'), TO_TIMESTAMP('31-OCT-2022 15:00:00', 'DD-MON-YYYY HH24:MI:SS'),TO_TIMESTAMP('01-NOV-2022 13:00:00', 'DD-MON-YYYY HH24:MI:SS'));
INSERT INTO LOANARCHIVE VALUES(201, 2201539, 9780367571931, 2, TO_TIMESTAMP('01-SEP-2022 13:00:00', 'DD-MON-YYYY HH24:MI:SS'), TO_TIMESTAMP('10-SEP-2022 11:00:00', 'DD-MON-YYYY HH24:MI:SS'),NULL);
INSERT INTO LOANARCHIVE VALUES(202, 2201539, 9780465023967, 1, TO_TIMESTAMP('01-SEP-2022 13:00:00', 'DD-MON-YYYY HH24:MI:SS'), TO_TIMESTAMP('10-SEP-2022 15:00:00', 'DD-MON-YYYY 			HH24:MI:SS'),TO_TIMESTAMP('11-SEP-2022 13:00:00', 'DD-MON-YYYY HH24:MI:SS'));

CREATE TABLE ENOTIF (
	RESNO NUMBER(4) REFERENCES RES(RESNO) ON DELETE CASCADE, 
	ESENTDATE TIMESTAMP(0));
INSERT INTO ENOTIF VALUES (101, TO_TIMESTAMP('10-SEP-2022 11:01:00','DD-MON-YYYY HH24:MI:SS'));
INSERT INTO ENOTIF VALUES (102, TO_TIMESTAMP('12-SEP-2022 11:01:00','DD-MON-YYYY HH24:MI:SS'));
INSERT INTO ENOTIF VALUES (101, TO_TIMESTAMP('02-NOV-2022 11:01:00','DD-MON-YYYY HH24:MI:SS'));
INSERT INTO ENOTIF VALUES (101, TO_TIMESTAMP('04-NOV-2022 11:01:00','DD-MON-YYYY HH24:MI:SS'));

CREATE TABLE MODULE (
	ISBN NUMBER(13) REFERENCES RNAME(ISBN) ON DELETE CASCADE,
	MODULEID NUMBER(4),
	MODDESC VARCHAR2(50));
INSERT INTO MODULE VALUES (9780367571931,3482,'Database Systems');
INSERT INTO MODULE VALUES (9780367571931,3990,'Big Data Processing');
INSERT INTO MODULE VALUES (9780367571931,3521,'Data Mining');
INSERT INTO MODULE VALUES (9780465023967,1200,'Introduction to Turkish History');
INSERT INTO MODULE VALUES (9781107186125,3482,'Database Systems');

--Views

--Overdue loans view
CREATE VIEW OVERDUE_LOANS AS
SELECT LOANCURRENT.LOANNO, LOANCURRENT.MID, LOANCURRENT.ISBN, LOANCURRENT.LOANDATE, RNAME.LPERIOD, (LOANCURRENT.LOANDATE+RNAME.LPERIOD) AS DUE
FROM LOANCURRENT
    INNER JOIN RNAME
    ON LOANCURRENT.ISBN = RNAME.ISBN
WHERE (LOANCURRENT.LOANDATE+RNAME.LPERIOD) < SYSDATE;

--View of current loans and their due dates
CREATE VIEW DUE_DATES AS
SELECT LOANCURRENT.LOANNO, LOANCURRENT.ISBN, LOANCURRENT.LOANDATE, RNAME.LPERIOD,(LOANCURRENT.LOANDATE+RNAME.LPERIOD) AS DUE
FROM LOANCURRENT
INNER JOIN RNAME
ON LOANCURRENT.ISBN = RNAME.ISBN;

--Fines outstanding per loan
CREATE VIEW FINES AS 
SELECT LOANCURRENT.LOANNO,LOANCURRENT.MID,ROUND(SYSDATE-(LOANCURRENT.LOANDATE+RNAME.LPERIOD)) AS FINES_OWED
FROM LOANCURRENT 
JOIN RNAME 
ON LOANCURRENT.ISBN = RNAME.ISBN
WHERE ROUND(SYSDATE-(LOANCURRENT.LOANDATE+RNAME.LPERIOD))>=1 AND FINEDATE IS NULL
UNION 
SELECT LOANARCHIVE.LOANNO,LOANARCHIVE.MID,ROUND(SYSDATE-(LOANARCHIVE.LOANDATE+RNAME.LPERIOD)) AS FINES_OWED
FROM LOANARCHIVE 
JOIN RNAME 
ON LOANARCHIVE.ISBN = RNAME.ISBN
WHERE ROUND(SYSDATE-(LOANARCHIVE.LOANDATE+RNAME.LPERIOD))>=1 AND FINEDATE IS NULL;

--Member views all current and past loans on their record, N.B add WHERE MID = X at end 
CREATE VIEW All_Loans AS 
SELECT LOANNO,MID,ISBN,COPY,LOANDATE,RETURNDATE,FINEDATE,'Current' as Type
FROM LOANCURRENT
UNION
SELECT LOANNO,MID,ISBN,COPY,LOANDATE,RETURNDATE,FINEDATE,'Past' as Type
FROM LOANARCHIVE;

--Fines outstanding per member
CREATE VIEW MEM_FINES AS
SELECT MID,SUM(FINES_OWED) AS TOTAL_FINES
FROM FINES
GROUP BY MID;

--Queries
SELECT ISBN, COUNT(ISBN)
FROM LOANCURRENT
WHERE LOANDATE > SYSDATE-20
GROUP BY ISBN
ORDER BY COUNT(ISBN) DESC;

SELECT MID,TOTAL_FINES
FROM MEM_FINES
WHERE MID=2201472;

SELECT LOANNO,MID,COPY,LOANDATE,RETURNDATE,FINEDATE
FROM All_Loans
WHERE ( LOANDATE BETWEEN SYSDATE - 30 AND SYSDATE) AND MID = 2201593;

SELECT RESNO, MID, ISBN, COPY, RESDATE
FROM RES
WHERE MID = 2201593;

CREATE OR REPLACE TRIGGER archiveloan
FOR UPDATE ON LOANCURRENT
COMPOUND TRIGGER
AFTER EACH ROW IS 
    BEGIN
        IF :NEW.RETURNDATE IS NOT NULL
        THEN INSERT INTO LOANARCHIVE (LOANNO,MID,ISBN,COPY,LOANDATE,RETURNDATE,FINEDATE) VALUES (:NEW.LOANNO,:NEW.MID,:NEW.ISBN,:NEW.COPY,:NEW.LOANDATE,:NEW.RETURNDATE,:NEW.FINEDATE); 
        END IF;
    END AFTER EACH ROW;
AFTER STATEMENT IS 
    BEGIN 
        DELETE FROM LOANCURRENT
        WHERE LOANNO IN (SELECT LOANNO FROM LOANARCHIVE);
    END AFTER STATEMENT;
END;
/

SELECT DISTINCT 
((SELECT MAXLOAN
FROM LOANPR 
FULL OUTER JOIN MEM
ON LOANPR.MTYPE = MEM.MTYPE
WHERE MID = 2201593)
-
(SELECT COUNT(RESNO)
FROM RES
WHERE MID = 2201593) ) AS NUMBER_OF_ITEMS_LEFT
FROM LOANPR 
FULL OUTER JOIN MEM
ON LOANPR.MTYPE = MEM.MTYPE
FULL OUTER JOIN RES
ON MEM.MID = RES.MID;

SELECT ISBN, FLR, SHF
FROM RCOPY 
WHERE ISBN = 3691564378829 and (
(SELECT COUNT(ISBN)
FROM RCOPY
WHERE ISBN = 3691564378829
) > (
SELECT COUNT(ISBN) 
FROM LOANCURRENT 
WHERE ISBN = 3691564378829));

SELECT COUNT(RESNO) AS RESERVATIONS
FROM RES
WHERE ISBN = 9780367571931;

CREATE OR REPLACE TRIGGER deleteoldres
AFTER INSERT ON LOANCURRENT
BEGIN
    DELETE FROM RES 
    WHERE RESNO IN
    (
        SELECT R.RESNO
        FROM RES R
        LEFT JOIN LOANCURRENT L
        ON R.MID = L.MID AND R.ISBN = L.ISBN AND R.COPY=L.COPY
        WHERE R.RESDATE<L.LOANDATE
    );
END;
/

SELECT LOANCURRENT.ISBN, RNAME.TITLE,ROUND((LOANCURRENT.LOANDATE+RNAME.LPERIOD)-SYSDATE) AS DAYS_LEFT
FROM LOANCURRENT
INNER JOIN RNAME
ON LOANCURRENT.ISBN = RNAME.ISBN
WHERE MID = 2201593;

SELECT MODULE.ISBN, MODULE.MODULEID, RNAME.TITLE, RNAME.ADP AS AUTHOR
FROM MODULE
INNER JOIN RNAME
ON MODULE.ISBN = RNAME.ISBN
WHERE MODULEID = 3482;

SELECT LOANARCHIVE.ISBN, RNAME.TITLE, RNAME.ADP AS AUTHOR,COUNT(RNAME.TITLE) AS TIMES_LOANED
FROM LOANARCHIVE
INNER JOIN RNAME
ON LOANARCHIVE.ISBN = RNAME.ISBN
WHERE LOANDATE BETWEEN '01-SEP-2022' AND '30-SEP-2022'
GROUP BY LOANARCHIVE.ISBN, RNAME.TITLE, RNAME.ADP
ORDER BY COUNT(ISBN) DESC;

SELECT MID,TOTAL_FINES,'Suspended' as Status
FROM MEM_FINES
WHERE TOTAL_FINES>10;


